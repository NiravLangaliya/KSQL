##Check Docker is running :

(base) usa-mac-nis1908:cp-all-in-one nlangaliya$ docker-compose ps
     Name                    Command                State                          Ports
--------------------------------------------------------------------------------------------------------------
broker            /etc/confluent/docker/run        Up         0.0.0.0:29092->29092/tcp, 0.0.0.0:9092->9092/tcp
connect           /etc/confluent/docker/run        Exit 137
control-center    /etc/confluent/docker/run        Exit 1
ksql-cli          /bin/sh                          Up
ksql-datagen      bash -c echo Waiting for K ...   Up
ksql-server       /etc/confluent/docker/run        Up         0.0.0.0:8088->8088/tcp
rest-proxy        /etc/confluent/docker/run        Up         0.0.0.0:8082->8082/tcp
schema-registry   /etc/confluent/docker/run        Up         0.0.0.0:8081->8081/tcp
zookeeper         /etc/confluent/docker/run        Up         0.0.0.0:2181->2181/tcp, 2888/tcp, 3888/tcp



##Create Topic users
docker-compose exec broker kafka-topics --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic users

##Produce Messages on Topic.
from confluent_kafka import Producer

def acked(err, msg):
    if err is not None:
        print("Failed to deliver message: {0}: {1}"
              .format(msg.value(), err.str()))
    else:
        print("Message produced: {0}".format(msg.value()))
p = Producer({'bootstrap.servers': 'localhost:9092'})

try:
    for val in range(1, 1000):
        p.produce('EDW_TEST', 'myvalue #{0}'
                  .format(val), callback=acked)
        p.poll(0.5)

except KeyboardInterrupt:
    pass

p.flush(30)

##Consume Messages on Topic.
docker-compose exec broker kafka-console-consumer --bootstrap-server localhost:29092 --topic EDW_TEST --from-beginning
